summary(g)
g + geom_point()
(g + geom_point()) + geom_smooth()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth("lm")
g + geom_point() + geom_smooth( method = "lm")
g + geom_point() + geom_smooth( method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth( method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point( color = "pink", size = 4, alpha = 1/2 )
g + geom_point( size = 4, alpha = 1/2, color = drv )
g + geom_point( size = 4, alpha = 1/2, aes(color = drv) )
g + geom_point( aes(color = drv), labs(title = "Swirl Rules" ), labs( x = "Displacement", y = "Hwy Mileage" ) )
g + geom_point( aes(color = drv))
g + geom_point( aes(color = drv) + labs(title = "Swirl Rules" ) + labs( x = "Displacement", y = "Hwy Mileage" ) )
g + geom_point( aes(color = drv) ) + labs(title = "Swirl Rules!" ) + labs( x = "Displacement", y = "Hwy Mileage" )
g + geom_point( aes(color = drv), size = 2, alpha = 1/2 ) + geom_smooth( size = 4, linetype = 3, method = "lm", se = FALSE )
g + geom_point( aes(color = drv) ) + theme_bw( base_family = "Times" )
warnings()
plot(myx, myy, type = "l", ylim = c(3,3))
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot( testdat, aes(x=myx,y=myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian( ylim = c(-3,3) )
g <- ggplot(mpg, aes(x=displ,y=hwy,color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm",se=FALSE,size=2,color="black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm",se=FALSE,size=2,color="black") + labs(x = "Displacement", y="Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom="density")
qplot(price, data = diamonds, geom="density", color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,shape=cut,color=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom = c("smooth", "lm"))
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut,facets = .~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth,price))
summary(g)
g + geom_point(aplha=1/3)
g + geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4), na.rm = TRUE)
cutpoints
diamonds$cut2 <- cut(diamonds$carat, cutpoints)
diamonds$cur2 <- cut(diamonds$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g + geom_point(alpha=1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha=1/3) + facet_grid(cut~car2) + geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
library("swirl")
swirl()
dist(dataFrame)
hc <- hclust(distxy)
pplot(hc)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=4,col="red")
abline(h=.4,col="red")
5
abline(h=.05,col="yellow")
12
abline(h=.05,col="green")
dist(dFsm)
plot(hc)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
my
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
x
newClust
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx,newCy, col = cols1, pch = 8, cex = 2, lwd = 2\)
points(newCx,newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply( distTmp2, 2, which.min)
points(x,y, pch = 8, cex = 2, col = cols1[newClust2])
points(x,y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2,mean)
tapply(y, newClust2,mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmean(dataFrame, centers = 3)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
library("swirl")
swirl()
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$v
svd1$v
svd1$v[,1]
svd1$d
head(constantMatrix)
constantMatrix
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
faceData
a1 <- ( svd1$u %*% svd1$d[1] ) * t(svd1$v)
a1 <- ( svd1$u[,1] %*% svd1$d[1] ) * t(svd1$v[,1])
a1 <- ( svd1$u[,1] * svd1$d[1] ) %*% t(svd1$v[,1])
heatmap(a1)
image(a1)
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage( svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]) )
myImage( svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]) )
dim(ssd)
names(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, activity == 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
unclass(sub1$activity)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd( scale(sub1[,-c(562,563)]) )
sim(svd1$u)
dim(svd1$u)
maxCon <- shich.max(svd1$v)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
kClust$cluster
dim(sub1)
table(kClust, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying])
plot(kClust$centers[laying, 1:12], pch=19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch=19, ylab = "Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(snames, sep = "|", fixed = T)
cnames <- strsplit(snames, "|", fixed = T)
cnames <- strsplit(cnames, "|", fixed = T)
cnames
wcol
cnames[[1]]
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summar(x0)
summay(x0)
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0), log10(x1) )
negative <- x1 < 0
sum(negative, na.rm = T)
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(dates, "%Y%m%d")
dates <- as.Date( as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site)
cnt0 <- subset(pm0, State.Code == 36)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply( split(cnt0, cnt0$county.site), nrow)
sapply( split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset( pm00, Count.Code == 63 & Site.ID == 2008 )
pm0sub <- subset( pm0, Count.Code == 63 & Site.ID == 2008 )
pm0sub <- subset( cnt0, Count.Code == 63 & Site.ID == 2008 )
pm0sub <- subset( cnt0, County.Code == 63 & Site.ID == 2008 )
pm1sub <- subset( cnt1, County.Code == 63 & Site.ID == 2008 )
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot( dates0, x0sub, pch =20)
abline(h=median(x0sub, na.rm = TRUE), lwd = 2)
plot( dates1, x1sub, pch =20)
abline(h=median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- tapply
mn0 <- with( pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with( pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0), mean(mn0))
d0 <- data.frame( state = names(mn0), mean = mn0 )
d1 <- data.frame( state = names(mn1), mean = mn1 )
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(mrg[,2], mrg[,3])
with(mrg, segments( rep(1,52), rep(2,52), mrg[,2], mrg[,3]) )
segments( rep(1,52), mrg[,2], rep(2,52), mrg[,3]) )
segments( rep(1,52), mrg[,2], rep(2,52), mrg[,3] )
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
NEI <- readRDS("../../Data Directory/exdata_data_NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("../../Data Directory/exdata_data_NEI_data/Source_Classification_Code.rds")
head(SCC)
names(SCC)
names(NEI)
emissions <- with(NEI, tapply( Emissions, as.factor(year), sum ))
emissions
emissions <- emissions / 1000
emissions
plot(emissions, type = "b", pch = 18, col = "green", ylab = "Emissions",
xlab = "Year", main = expression('Emissions from PM'[2.5] 'in US from 1999 to 2008') )
plot(emissions, type = "b", pch = 18, col = "green", ylab = "Emissions",
xlab = "Year", main = expression("Emissions from PM[2.5] in US from 1999 to 2008") )
hist(emissions, pch = 18, col = "green", ylab = "Emissions (Kilo Tons)",
xlab = "Year", main = expression("Emissions from PM[2.5] in US from 1999 to 2008") )
plot(emissions, type = "b", pch = 18, col = "green", ylab = "Emissions",
xlab = "Year", main = expression("Emissions from PM[2.5] in US from 1999 to 2008") )
hist(emissions, pch = 18, col = "green", ylab = "Emissions (Kilo Tons)",
xlab = "Year", main = expression("Emissions from PM[2.5] in US from 1999 to 2008") )
barplot(emissions, pch = 18, col = "green", ylab = "Emissions",
xlab = "Year", main = expression("Emissions from PM[2.5] in US from 1999 to 2008") )
barplot(emissions, pch = 18, col = C("red", "green", "blue", "cyan"), ylab = "Emissions (Kilo Tons)",
xlab = "Year", main = expression("Emissions from PM[2.5] in US from 1999 to 2008") )
barplot(emissions, pch = 18, col = c("red", "green", "blue", "cyan"), ylab = "Emissions (Kilo Tons)",
xlab = "Year", main = expression("Emissions from PM[2.5] in US from 1999 to 2008") )
barplot(emissions, pch = 18, col = c("red", "blue", "cyan", "green"), ylab = "Emissions (Kilo Tons)",
xlab = "Year", main = expression("Emissions from PM[2.5] in US from 1999 to 2008") )
source("edaPlot1.R")
source("edaPlot1.R")
baltimoreEmissions <- with( NEI[NEI$fips=="24510"], tapply )
baltimoreEmissions <- with( NEI[NEI$fips == "24510"], tapply( Emissions, as.factor(year), sum ) )
baltimoreEmissions <- with( NEI[NEI$fips == "24510", ], tapply( Emissions, as.factor(year), sum ) )
baltimoreEmissions
plot( baltimoreEmissions, pch = 18, col = "green", xlab = "Year, ylab = "Emissions (Tons)",
main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
plot( baltimoreEmissions, pch = 18, col = "green", xlab = "Year, ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
plot( baltimoreEmissions, pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
segments(baltimoreEmissions)
segments(baltimoreEmissions, c(1999,2002,2005,2008))
segments(baltimoreEmissions, [1999,2002,2005,2008])
baltimoreEmissions
class(baltimoreEmissions)
unclass(baltimoreEmissions)
plot( unclass(baltimoreEmissions), pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
baltimoreEmissions[1,1]
baltimoreEmissions[1]
baltimoreEmissions[1,]
baltimoreEmissions[[1]]
baltimoreEmissions[[2]]
baltimoreEmissions[1
]
plot( baltimoreEmissions, baltimoreEmissions, pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
plot( baltimoreEmissions, as.factor(NEI$year), pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
plot( baltimoreEmissions, c(1999,2002,2005,2008), pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
plot( c(1999,2002,2005,2008), baltimoreEmissions, pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
x <- c(1999,2002,2005,2008)
x
plot( x, baltimoreEmissions, pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
plot( as.vector( c(1999,2002,2005,2008) ), baltimoreEmissions, pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
axis(1, at=seq(1999, 2008, by=3000))
plot( baltimoreEmissions, pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
axis(1, at=seq(1999, 2008, by=3000))
axis(1, at=seq(1999, 2008, by=3000))
axis(1, at=seq(1999, 2008, by=3000), las = 2)
plot( baltimoreEmissions, pch = 18, col = "green", xlim = c(1999, 2008), xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
barplot( baltimoreEmissions, pch = 18, col = "green", xlab = "Year", ylab = "Emissions (Tons)", main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
png(filename = "edaPlot2.png", width = 480, height = 480 )
barplot(baltimoreEmissions, col = c("red", "blue", "cyan", "green"), xlab = "Year", ylab = "Emissions (Tons)",
main = expression("Emissions from PM[2.5] in Baltimore City from 1999 to 2008") )
dev.off()
library(ggplot2)
abline(h = lm(baltimoreEmissions))
abline(h = lm(baltimoreEmissions ~ x))
abline(h = lm(as.double(baltimoreEmissions) ~ x))
ggp <- ggplot(NEI[NEI$fips == "24510",],aes(factor(year),Emissions,fill=type)) +
geom_bar() + facet_grid( .~type ) +
labs( x = "Year", y = expression("Total Emissions (Tons)")) +
labs( title = expression("PM[2.5] Emissions in Baltimore City from 1999 to 2008 by Source Type"))
print(ggp)
ggp <- ggplot(NEI[NEI$fips == "24510",],aes(factor(year),Emissions,fill=type)) +
geom_bar( stat = "identity") + facet_grid( .~type ) +
labs( x = "Year", y = expression("Total Emissions (Tons)")) +
labs( title = expression("PM[2.5] Emissions in Baltimore City from 1999 to 2008 by Source Type"))
print(ggp)
png(filename = "edaPlot3.png", width = 480, height = 480 )
ggPlot <- ggplot(NEI[NEI$fips == "24510",],aes(factor(year),Emissions,fill=type))
+       geom_bar( stat = "identity") + facet_grid( .~type )
+       labs( x = "Year", y = expression("Total Emissions (Tons)"))
+       labs( title = expression("PM[2.5] Emissions in Baltimore City from 1999 to 2008 by Source Type"))
print(ggPlot)
dev.off()
png(filename = "edaPlot3.png", width = 480, height = 480 )
ggPlot <- ggplot(NEI[NEI$fips == "24510",],aes( factor(year), Emissions, fill = type )) +
geom_bar( stat = "identity") + facet_grid( .~type ) +
labs( x = "Year", y = expression("Total Emissions (Tons)")) +
labs( title = expression("PM[2.5] Emissions in Baltimore City from 1999 to 2008 by Source Type"))
print(ggPlot)
dev.off()
png(filename = "edaPlot3.png", width = 800, height = 480 )
ggPlot <- ggplot(NEI[NEI$fips == "24510",],aes( factor(year), Emissions, fill = type )) +
geom_bar( stat = "identity") + facet_grid( .~type ) +
labs( x = "Year", y = expression("Total Emissions (Tons)")) +
labs( title = expression("PM[2.5] Emissions in Baltimore City from 1999 to 2008 by Source Type"))
print(ggPlot)
dev.off()
names(NEI)
names(SCC)
str(SCC)
str(NEI)
coal = SCC[grepl("coal", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(NEI, coal, by='SCC')
coalEmissions <- with(merge, tapply( Emissions, as.factor(year), sum ))
coalEmissions
ggPlot <- ggplot(coalEmissions, aes( factor(year), Emissions )) +
geom_bar( stat = "identity") +
labs( x = "Year", y = expression("Total Emissions (Kilo Tons)")) +
labs( title = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008"))
print(ggPlot)
ggPlot <- ggplot(coalEmissions, aes( factor(year), Emissions )) +
geom_bar( stat = "identity") +
labs( x = "Year", y = expression("Total Emissions (Kilo Tons)")) +
labs( title = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008"))
ggPlot <- ggplot(coalEmissions ) +
geom_bar( stat = "identity") +
labs( x = "Year", y = expression("Total Emissions (Kilo Tons)")) +
labs( title = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008"))
ggPlot <- ggplot( unclass(coalEmissions) ) +
geom_bar( stat = "identity") +
labs( x = "Year", y = expression("Total Emissions (Kilo Tons)")) +
labs( title = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008"))
ggPlot <- ggplot( coalEmissions, aes( factor(c(1999,2002,2005,2008)), coalEmissions) ) +
geom_bar( stat = "identity") +
labs( x = "Year", y = expression("Total Emissions (Kilo Tons)")) +
labs( title = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008"))
ggPlot <- ggplot( as.numeric(coalEmissions), aes( factor(c(1999,2002,2005,2008)), as.numeric(coalEmissions) ) ) +
geom_bar( stat = "identity") +
labs( x = "Year", y = expression("Total Emissions (Kilo Tons)")) +
labs( title = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008"))
barplot(coalEmissions, col = c("red", "blue", "cyan", "green"), xlab = "Year", ylab = "Emissions (Kilo Tons)",
main = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008") )
barplot(coalEmissions/1000, col = c("red", "blue", "cyan", "green"), xlab = "Year", ylab = "Emissions (Kilo Tons)",
main = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008") )
coal = SCC[grepl("coal", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(NEI, coal, by='SCC')
coalEmissions <- with(merge, tapply( Emissions, as.factor(year), sum ))
coalEmissions <- coalEmissions / 1000
png(filename = "edaPlot4.png", width = 480, height = 480 )
barplot(coalEmissions, col = c("red", "blue", "cyan", "green"), xlab = "Year", ylab = "Emissions (Kilo Tons)",
main = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008") )
dev.off()
png(filename = "edaPlot4.png", width = 520, height = 480 )
barplot(coalEmissions, col = c("red", "blue", "cyan", "green"), xlab = "Year", ylab = "Emissions (Kilo Tons)",
main = expression("PM[2.5] Coal Combustion Source Emissions across US from 1999 to 2008") )
dev.off()
motor = SCC[grepl("motor", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(NEI, motor, by='SCC')
motorEmissions <- with(merge[merge$fips == "24510", ], tapply( Emissions, as.factor(year), sum ))
motorEmissions <- motorEmissions / 1000
png(filename = "edaPlot5.png", width = 520, height = 480 )
barplot(motorEmissions, col = c("magenta", "ruby", "purple", "indigo"), xlab = "Year", ylab = "Emissions (Kilo Tons)",
main = expression("PM[2.5] Motor vehicle sources Emissions in Baltimore City from 1999 to 2008") )
dev.off()
motor = SCC[grepl("motor", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(NEI, motor, by='SCC')
motorEmissions <- with(merge[merge$fips == "24510", ], tapply( Emissions, as.factor(year), sum ))
motorEmissions <- motorEmissions / 1000
png(filename = "edaPlot5.png", width = 520, height = 480 )
barplot(motorEmissions, col = c("magenta", "cyan", "purple", "indigo"), xlab = "Year", ylab = "Emissions (Kilo Tons)",
main = expression("PM[2.5] Motor vehicle sources Emissions in Baltimore City from 1999 to 2008") )
dev.off()
png(filename = "edaPlot5.png", width = 520, height = 480 )
barplot(motorEmissions, col = c("magenta", "cyan", "purple", "green"), xlab = "Year", ylab = "Emissions (Kilo Tons)",
main = expression("PM[2.5] Motor vehicle sources Emissions in Baltimore City from 1999 to 2008") )
dev.off()
motor = SCC[grepl("motor", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(NEI, motor, by='SCC')
motorEmissions <- with(merge[merge$fips == "24510", ], tapply( Emissions, as.factor(year), sum ))
png(filename = "edaPlot5.png", width = 520, height = 480 )
barplot(motorEmissions, col = c("magenta", "cyan", "purple", "green"), xlab = "Year", ylab = "Emissions (Tons)",
main = expression("PM[2.5] Motor vehicle sources Emissions in Baltimore City from 1999 to 2008") )
dev.off()
motor = SCC[grepl("motor|vehicle", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(NEI, motor, by='SCC')
motorEmissions <- with(merge[merge$fips == "24510", ], tapply( Emissions, as.factor(year), sum ))
png(filename = "edaPlot5.png", width = 520, height = 480 )
barplot(motorEmissions, col = c("magenta", "cyan", "purple", "green"), xlab = "Year", ylab = "Emissions (Tons)",
main = expression("PM[2.5] Motor vehicle sources Emissions in Baltimore City from 1999 to 2008") )
dev.off()
motorVehicle = SCC[grepl("motor|vehicle", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(NEI, motorVehicle, by='SCC')
png(filename = "edaPlot3.png", width = 600, height = 480 )
ggPlot <- ggplot(merge[merge$fips == "24510" | merge$fips == "06037",], aes( factor(year), Emissions, fill = city )) +
geom_bar( stat = "identity") + facet_grid( .~city ) +
labs( x = "Year", y = expression("Total Emissions (Tons)")) +
labs( title = expression("PM[2.5] Emissions from motor vehicle sources in Baltimore City
and Los Angeles County from 1999 to 2008 by City"))
print(ggPlot)
dev.off()
head(merge[merge$fips == "24510" | merge$fips == "06037",])
ggPlot <- ggplot(merge[merge$fips == "24510" | merge$fips == "06037",], aes( factor(year), Emissions, fill = city )) +
geom_bar( aes(fill=year), stat = "identity") + facet_grid( .~city ) +
labs( x = "Year", y = expression("Total Emissions (Tons)")) +
labs( title = expression("PM[2.5] Emissions from motor vehicle sources in Baltimore City
and Los Angeles County from 1999 to 2008 by City"))
print(ggPlot)
motorVehicle = SCC[grepl("motor|vehicle", SCC$Short.Name, ignore.case=TRUE),]
merge <- merge(NEI, motorVehicle, by='SCC')
baltimore <- merge[ merge$fips == "24510", ]
losAngeles <- merge[ merge$fips == "06037", ]
baltimore$city <- "Baltimore City"
losAngeles$city <- "Los Angeles County"
merge <- rbind( baltimore, losAngeles )
png(filename = "edaPlot3.png", width = 600, height = 480 )
ggPlot <- ggplot(merge, aes( factor(year), Emissions, fill = city )) +
geom_bar( aes(fill=year), stat = "identity") + facet_grid( .~city ) +
labs( x = "Year", y = expression("Total Emissions (Tons)")) +
labs( title = expression("PM[2.5] Emissions from motor vehicle sources in Baltimore City
and Los Angeles County from 1999 to 2008 by City"))
print(ggPlot)
dev.off()
png(filename = "edaPlot6.png", width = 680, height = 600 )
ggPlot <- ggplot(merge, aes( factor(year), Emissions, fill = city )) +
geom_bar( aes(fill=year), stat = "identity") + facet_grid( .~city ) +
labs( x = "Year", y = expression("Total Emissions (Tons)")) +
labs( title = expression("PM[2.5] Emissions from motor vehicle sources in Baltimore City
and Los Angeles County from 1999 to 2008 by City"))
print(ggPlot)
dev.off()
png(filename = "edaPlot3.png", width = 800, height = 480 )
ggPlot <- ggplot(NEI[NEI$fips == "24510",],aes( factor(year), Emissions, fill = type )) +
geom_bar( stat = "identity") + facet_grid( .~type ) +
labs( x = "Year", y = expression("Total Emissions (Tons)")) +
labs( title = expression("PM[2.5] Emissions in Baltimore City from 1999 to 2008 by Source Type"))
print(ggPlot)
dev.off()
getpwd()
pwd()
getpwd
setwd("F:/Data Science Course/Code Directory/Git/RepResearchCourseProject")
getwd()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
